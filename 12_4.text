//main.js
var mapContainer = document.getElementById('map'),
    mapOption = {
        center: new kakao.maps.LatLng(36.832365, 127.148021),
        level: 4
    };

var map = new kakao.maps.Map(mapContainer, mapOption);

var geocoder = new kakao.maps.services.Geocoder();

var marker = new kakao.maps.Marker(),
    infowindow = new kakao.maps.InfoWindow({ zindex: 1 });

searchAddrFromCoords(map.getCenter(), displayCenterInfo);

kakao.maps.event.addListener(map, 'click', function (mouseEvent) {
    searchDetailAddrFromCoords(mouseEvent.latLng, function (result, status) {
        if (status === kakao.maps.services.Status.OK) {
            if (result[0].address && result[0].address.address_name) {
                var detailAddr = '<div>지번 주소 : ' + result[0].address.address_name + '</div>';

                var content = '<div class="bAddr">' +
                    '<a href="sub.html?address=' + encodeURIComponent(result[0].address.address_name) + '" class="title">주소정보</a>' +
                    detailAddr +
                    '</div>' +
                    '<div class="closeBtn" onclick="closeOverlay()">닫기</div>';

                // HTML 업데이트
                displayCenterInfo(result, status);

                marker.setPosition(mouseEvent.latLng);
                marker.setMap(map);

                infowindow.setContent(content);
                infowindow.open(map, marker);
            }
        }
    });
});

function displayCenterInfo(result, status) {
    if (status === kakao.maps.services.Status.OK) {
        var infoDiv = document.querySelector('.main2');

        for (var i = 0; i < result.length; i++) {
            if (result[i].region_type === 'H') {
                var address = result[i].address_name;

                // 지번주소로 HTML 내용 업데이트
                infoDiv.innerHTML = address;
                break;
            }
        }
    }
}



// 인포윈도우 닫기 함수
function closeOverlay() {
    infowindow.close();
    marker.setMap(null);
}

kakao.maps.event.addListener(map, 'idle', function () {
    searchAddrFromCoords(map.getCenter(), displayCenterInfo);
});

function searchAddrFromCoords(coords, callback) {
    geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);
}

function searchDetailAddrFromCoords(coords, callback) {
    geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);
}

function displayCenterInfo(result, status) {
    if (status === kakao.maps.services.Status.OK) {
        var infoDiv = document.getElementById('centerAddr');

        for (var i = 0; i < result.length; i++) {
            if (result[i].region_type === 'H') {
                infoDiv.innerHTML = result[i].address_name;
                break;
            }
        }
    }
}




================================================================



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>sub_kakao</title>

    <link rel="stylesheet" type="text/css" href="sub.css">
</head>
<body>
    <div class="wrap">
        <div class="container"></div>

        <div class="text_box">
            <h1 class="main1">ㅂㅈㄷ</h1>
            <h2 class="main2"></h2>
            <h3 class="main3">| 정보 수정 요청</h3>
        </div>
        <div class="sub_box">
            <h2 class="sub">상세정보</h2>
            <button onclick="">체크</button>
            <button onclick="">연구</button>
            <button onclick="">금지</button>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // 페이지 로드 시 실행되는 함수
            var address = getParameterByName('address');
            if (address) {
                // 주소 정보가 있는 경우에만 처리
                document.querySelector('.main2').textContent = address;
            }
        });

        function getParameterByName(name) {
            // URL에서 쿼리 문자열을 파싱하여 주어진 이름의 매개변수 값을 가져오는 함수
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                results = regex.exec(window.location.href);
            if (!results) return null;
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));
        }

        function checkAction() {
            // '체크' 버튼 클릭 시 수행할 동작
            // 예: alert('체크 버튼 클릭!');
        }

        function researchAction() {
            // '연구' 버튼 클릭 시 수행할 동작
            // 예: alert('연구 버튼 클릭!');
        }

        function prohibitAction() {
            // '금지' 버튼 클릭 시 수행할 동작
            // 예: alert('금지 버튼 클릭!');
        }
    </script>
</body>
</html>
