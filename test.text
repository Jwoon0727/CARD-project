
async function openModal(jibunAddress, hosuDetails) {
  // 이미 모달이 열려있는 경우 더 이상 실행하지 않음
  if (document.querySelector(".modal-container")) {
    return;
  }

  // 새로운 div 요소를 생성하여 모달을 나타냄
  modalContainer = document.createElement("div");
  modalContainer.className = "modal-container";

  // 모달 내용 추가
  modalContainer.innerHTML = `
      <div class="wrap">
          <div class="modal">
              <div class="modal-content">
                  <span class="close" onclick="closeModal()">&times;</span>

                  <div class="box1">
                      <h2 class="main2">${jibunAddress}</h2>
                  </div>

                  <div class="box2">
                      <div class="Name01"></div>
                  </div>

                  <div class="box3">
                      <div class="Detail01"></div>
                  </div>

                  <div class="box4">
                    <div class="Detail02"></div>
                   </div>

                  <div class="box5">
                     <div class="Detail03"></div>
                 </div>

              </div>
          </div>
      </div>
  `;

  // body에 모달 요소 추가
  document.body.appendChild(modalContainer);

  var csvFilePath = "../test_information.csv";

  try {
    var data = await readCSV(csvFilePath);

    var modal = modalContainer.querySelector(".modal");
    modal.style.display = "block";

    var matchingRows = findRowsByJibun(data, jibunAddress);

    if (matchingRows.length > 0) {
      console.log(jibunAddress + "에 대한 상세 정보:");

      if (matchingRows.length > 0) {
        modalContainer.querySelector(".Name01").innerHTML =
          " " + matchingRows[0][2] + "<br>";

        for (var i = 0; i < matchingRows.length; i++) {
          console.log("Detail:", matchingRows[i][1]);

          // Detail01, Detail02, Detail03에 똑같이 체크박스와 날짜 정보 추가
          var detailContainer = modalContainer.querySelector(`.Detail0${i+1}`);
          var checkbox = document.createElement("input");
          checkbox.type = "checkbox";
          checkbox.id = `checkbox${i}`;
          checkbox.value = matchingRows[i][1];

          var label = document.createElement("label");
          label.htmlFor = `checkbox${i}`;
          label.appendChild(document.createTextNode(" " + matchingRows[i][1]));

          var dateElement = document.createElement("span");
          dateElement.style.marginLeft = "10px";

          var br = document.createElement("br");

          detailContainer.appendChild(checkbox);
          detailContainer.appendChild(label);
          detailContainer.appendChild(dateElement);
          detailContainer.appendChild(br);

          checkbox.addEventListener("change", function (event) {
            var currentCheckbox = event.target;
            var currentCheckboxIndex = parseInt(
              currentCheckbox.id.split("_")[1],
              10
            );
            var currentCheckboxDateElement =
              currentCheckbox.nextElementSibling.nextElementSibling;

            if (currentCheckbox.checked) {
              var currentDate = new Date();
              var dateString = currentDate.toLocaleDateString();
              currentCheckboxDateElement.textContent = dateString;
            } else {
              currentCheckboxDateElement.textContent = "";
            }
          });
        }
      }
    } else {
      console.log("해당 Jibun에 대한 데이터를 찾을 수 없습니다.");
    }
  } catch (error) {
    console.error("CSV 파일을 읽어오는 중 오류가 발생했습니다:", error);
  }
}
